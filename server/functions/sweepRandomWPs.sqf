//
//									random waypoint generator
//									  server side function
// usage
//
// syntax1: [_unit, "some sector name"] spawn gnrf_randomWPgen_fnc;         ->  unit will stay within given sector
// syntax2: [_unit, "global"] spawn gnrf_randomWPgen_fnc;                   ->  unit will roam all of Zargabad  
// syntax3: [_unit, ["Array", "of", "sectors"]] spawn gnrf_randomWPgen_fnc; ->  unit will roam given sectors
// syntax4: [_unit, [any number of positions]] spawn gnrf_randomWPgen_fnc;  ->  unit will only to given positions

// example: [_unit, ["falafel", "bacon", "bacon"]] spawn gnrf_randomWPgen_fnc; ->  unit will commute between falafel and bacon, but will 'prefer' bacon - who wouldn´t?
//						 


	private ["_unit", "_sector", "_wpSector", "_group", "_wpSet", "_randomWpNr", "_wpMarker", "_wp", "_wpPos", "_rad"];
	_unit = _this select 0;
	_group = group _unit;
	
	//determine sector 
	_sector = _this select 1;
	
	switch (typeName _sector) do {
		
		//on first call sector is stored within the unit´s variable space
		case "STRING" : {_unit setVariable ["wpSector", _sector]; _wpSector = _sector};
	
		//determine random sector if more than one is passed
		case "ARRAY"  : {_unit setVariable ["wpSector", _sector]; _wpSector = _sector call BIS_fnc_selectRandom};

		//on later calls sector is read from the unit´s variable space
		case "SCALAR" : {
						_sector = _unit getVariable "wpSector";						
						if (typeName _sector == "STRING") then {_wpSector = _sector};
						if (typeName _sector == "ARRAY") then {_wpSector = _sector call BIS_fnc_selectRandom};
						};

		//in case of invalid arguments get units spawn sector, if the variable doesn´t exist sector is "global"
		default		    {
						_wpSector = _unit getVariable ["sector", "global"];
						hintSilent format ["Invalid argument passed to randomWPgenerator: %1", _sector];
						};
	};
	
	//sector waypoints
	if (typeName _wpSector == "STRING") then {
	
		//if sector is "global" a random sector is chosen with each new waypoint
		if (_wpSector == "global") then {_wpSector = ["omaha","falafel","mushroom","golem","panties","bacon"] call BIS_fnc_selectRandom};
	
		//get wpSet, set randomWpNr
		_wpSet = _unit getVariable ["wpSet", "Default"];
	
		switch (_wpSet) do {
	
			case "Vehicle" : {_randomWpNr = round(random 12)};
		
			case "Default" : {_randomWpNr = round(random 15)};
		};
	
		//generate marker name
		_wpMarker = _wpSector + _wpSet + "WP" + str(_randomWpNr);	
		_wpPos = getMarkerPos _wpMarker;
		
		//set wpCompletitionRadius
		_rad = 30;
		
		//debug missing marker mystery
		if ((count _wpPos) != 3) then {player sideChat format ["Invalid marker name generated by randomWPgen: %1", _wpMarker]};
	};
	
	//position waypoints
	if (typeName _wpSector == "ARRAY") then {
	
		_wpPos = _wpSector; 
		_rad = 0;
		hintSilent format ["%1", _wpPos];
	};
	
	//delete all previous waypoints
	while {(count (waypoints _group)) > 0} do {deleteWaypoint ((waypoints _group) select 0)};
	
//	_wpPos = [_wpPos select 0, _wpPos select 1];
	
	
	//create new wp
	_wp = _group addWaypoint [_wpPos, 0];
	_wp setWaypointType "MOVE";
	_wp setWaypointBehaviour "SAFE";
	_wp setWaypointSpeed "LIMITED";
	_wp setWaypointFormation "LINE";
	_wp setWaypointCompletionRadius _rad;
	_wp setWaypointStatements ["true", "[this, 0] spawn gnrf_randomWPgen_fnc;"]; //on wp completition this script is called again
	_wp setWaypointTimeout [0, 10, 20];
